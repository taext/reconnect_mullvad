#!/usr/bin/env python
# PYTHON_ARGCOMPLETE_OK

#           reconnect_mullvad
#     v0.39 July 10th '24 by d@v1d.dk

import time, sh, sys, re, random, argparse, argcomplete, subprocess, os
from progress.bar import FillingSquaresBar as Bar

__version__ = "v0.39"
__date__ = "July 10     th '24"

path_to_file = "/home/dd/Documents/reconnect_mullvad/" # for using the --file option

description = """Wait for n minutes and change Mullvad IP, optionally also country. 
                 Ctrl-C to change now and restart timer, Ctrl-C twice to exit."""
parser = argparse.ArgumentParser(description=description)
parser.add_argument("time_in_minutes", help="time to wait in minutes")
parser.add_argument("-c", "--countries", help="string of two-character country codes \"de no se\"")
parser.add_argument("-f", "--file", help="use country codes string from file")
parser.add_argument("-a", "--alert", help="alert n seconds before changing IP")
parser.add_argument("-v", "--version", 
                    action='version', 
                    version=f'%(prog)s {__version__} ({__date__})', 
                    help=f'show version number ({__version__})')
argcomplete.autocomplete(parser)
args = parser.parse_args()

time_in_minutes = int(args.time_in_minutes)
time_in_secs = time_in_minutes * 60

def get_current_country():
    time.sleep(1)
    mullvad_status = sh.mullvad("status")
    m = re.findall('Connect...? to (\w\w)', mullvad_status)
    current_country = set(m[0]) 
    return current_country, mullvad_status


filename = sys.argv[0].split("/")[-1]
while True:
    current_country, mullvad_status = get_current_country()
    print(mullvad_status)
    if time_in_minutes > 1:
        bar = Bar(f'Waiting {time_in_minutes} minutes', max=time_in_secs)
    else:
        bar = Bar(f'Waiting {time_in_minutes} minute', max=time_in_secs)
    for i in range(time_in_secs):
        try:
            time.sleep(1)
            bar.next()
            if args.alert:
                if i == time_in_secs - int(args.alert):
                    sh.notify_send(f"Upcoming IP change in {args.alert} seconds...")
        except KeyboardInterrupt:
            try:
                time.sleep(0.5) # wait for second Ctrl-C to exit
                break           # or break for loop (but finish while loop)
            except KeyboardInterrupt:
                print(f"\nexiting... \nthank you for using {filename}")
                sys.exit()
    print("\n\nReconnecting Mullvad...")

    if not args.countries and not args.file:      # only update IP (same country)    
        sh.mullvad("reconnect")
        time.sleep(2)    # wait for mullvad
    
    elif args.countries or args.file:       # also update country
        if args.file:
            with open(path_to_file + args.file, 'r') as f:
                file_read = f.read()
                countries = set(file_read.split())
        else:                     
            countries = set(args.countries.split())
        countries_wo_current = list(countries - current_country)
        rand_country = random.choice(countries_wo_current)
        process = subprocess.Popen(["mullvad", "relay", "set", "location", rand_country])
        current_country, _ = get_current_country()
        i = 0
        while current_country == rand_country and i < 20:
            try:
                time.sleep(1) # wait for mullvad reconnect or user Ctrl-C
                current_country = get_current_country()
                i += 1
            except KeyboardInterrupt:
                print(f"\nexiting... \nthank you for using {filename}")
                sys.exit()


